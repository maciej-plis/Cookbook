plugins {
    id 'org.springframework.boot' version '2.5.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'groovy'
    id 'idea'
}

group = 'matthias'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '15'
targetCompatibility = '15'

configurations {
    compileOnly.extendsFrom annotationProcessor
    integrationTestImplementation.extendsFrom testImplementation
    integrationTestRuntime.extendsFrom testImplementation
}

repositories {
    mavenCentral()
}

sourceSets {
    test {
        groovy {
            compileClasspath += sourceSets.main.output
            runtimeClasspath += sourceSets.main.output
            srcDirs = ['src/test/groovy']
        }
        resources.srcDir 'src/test/resources'
    }
    integrationTest {
        groovy {
            compileClasspath += sourceSets.main.output
            runtimeClasspath += sourceSets.main.output
            srcDirs = ['src/integration_test/groovy']
        }
        resources.srcDir 'src/integration_test/resources'
    }
}

dependencies {

    // Spring
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    //MongoDB
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    integrationTestImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo:3.0.0'

    // Guava
    implementation "com.google.guava:guava:30.1.1-jre"

    // Spring Tests
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // Spock
    testImplementation 'org.codehaus.groovy:groovy-all:3.0.8'
    testImplementation 'org.spockframework:spock-core:2.0-M3-groovy-3.0'
    integrationTestImplementation 'org.spockframework:spock-spring:2.0-M3-groovy-3.0'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // MapStruct
    compileOnly 'org.mapstruct:mapstruct:1.4.2.Final'
    testImplementation 'org.mapstruct:mapstruct:1.4.2.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'
}

task integrationTest(type: Test) {
    useJUnitPlatform()
    mustRunAfter test
    group 'verification'
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
}

test {
    useJUnitPlatform()
}

idea {
    module {
        testSourceDirs += sourceSets.integrationTest.groovy.srcDirs
        testResourceDirs += sourceSets.integrationTest.resources.srcDirs
    }
}

check {
    dependsOn integrationTest
}

compileJava {
    options.compilerArgs += [
            '-Amapstruct.defaultComponentModel=spring',
            '-Amapstruct.unmappedTargetPolicy=ERROR'
    ]
}